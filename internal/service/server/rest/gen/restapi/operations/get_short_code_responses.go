// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dimuska139/urlshortener/internal/service/server/rest/gen/models"
)

// GetShortCodeFoundCode is the HTTP code returned for type GetShortCodeFound
const GetShortCodeFoundCode int = 302

/*
GetShortCodeFound Visit properly tracked and redirected

swagger:response getShortCodeFound
*/
type GetShortCodeFound struct {
	/*Redirect url

	 */
	Location string `json:"Location"`

	/*
	  In: Body
	*/
	Payload *models.RedirectURL `json:"body,omitempty"`
}

// NewGetShortCodeFound creates GetShortCodeFound with default headers values
func NewGetShortCodeFound() *GetShortCodeFound {

	return &GetShortCodeFound{}
}

// WithLocation adds the location to the get short code found response
func (o *GetShortCodeFound) WithLocation(location string) *GetShortCodeFound {
	o.Location = location
	return o
}

// SetLocation sets the location to the get short code found response
func (o *GetShortCodeFound) SetLocation(location string) {
	o.Location = location
}

// WithPayload adds the payload to the get short code found response
func (o *GetShortCodeFound) WithPayload(payload *models.RedirectURL) *GetShortCodeFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get short code found response
func (o *GetShortCodeFound) SetPayload(payload *models.RedirectURL) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShortCodeFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.WriteHeader(302)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShortCodeNotFoundCode is the HTTP code returned for type GetShortCodeNotFound
const GetShortCodeNotFoundCode int = 404

/*
GetShortCodeNotFound Session is not found

swagger:response getShortCodeNotFound
*/
type GetShortCodeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFoundError `json:"body,omitempty"`
}

// NewGetShortCodeNotFound creates GetShortCodeNotFound with default headers values
func NewGetShortCodeNotFound() *GetShortCodeNotFound {

	return &GetShortCodeNotFound{}
}

// WithPayload adds the payload to the get short code not found response
func (o *GetShortCodeNotFound) WithPayload(payload *models.NotFoundError) *GetShortCodeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get short code not found response
func (o *GetShortCodeNotFound) SetPayload(payload *models.NotFoundError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShortCodeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetShortCodeInternalServerErrorCode is the HTTP code returned for type GetShortCodeInternalServerError
const GetShortCodeInternalServerErrorCode int = 500

/*
GetShortCodeInternalServerError Internal error

swagger:response getShortCodeInternalServerError
*/
type GetShortCodeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.InternalError `json:"body,omitempty"`
}

// NewGetShortCodeInternalServerError creates GetShortCodeInternalServerError with default headers values
func NewGetShortCodeInternalServerError() *GetShortCodeInternalServerError {

	return &GetShortCodeInternalServerError{}
}

// WithPayload adds the payload to the get short code internal server error response
func (o *GetShortCodeInternalServerError) WithPayload(payload *models.InternalError) *GetShortCodeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get short code internal server error response
func (o *GetShortCodeInternalServerError) SetPayload(payload *models.InternalError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetShortCodeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
