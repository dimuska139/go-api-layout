// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package infrastructure

import (
	"github.com/dimuska139/urlshortener/internal/api"
	"github.com/dimuska139/urlshortener/internal/api/middleware"
	"github.com/dimuska139/urlshortener/internal/config"
	"github.com/dimuska139/urlshortener/internal/handlers"
	"github.com/dimuska139/urlshortener/internal/logging"
	"github.com/dimuska139/urlshortener/internal/services"
	"github.com/dimuska139/urlshortener/internal/storage"
)

// Injectors from wire.go:

func InitConfig(configPath string) (*config.Config, error) {
	configConfig, err := config.NewConfig(configPath)
	if err != nil {
		return nil, err
	}
	return configConfig, nil
}

func InitLogger(config2 *config.Config) logging.Loggerer {
	loggerer := logging.NewLogger(config2)
	return loggerer
}

func InitRestAPI(config2 *config.Config, logger logging.Loggerer) (*api.RestAPI, error) {
	middlewareFactory, err := middleware.NewMiddlewareFactory(logger)
	if err != nil {
		return nil, err
	}
	pool, err := storage.NewPostgresPool(config2, logger)
	if err != nil {
		return nil, err
	}
	database := storage.NewDatabase(pool)
	shrinkService := services.NewShrinkService(config2, database)
	statisticsService := services.NewStatisticsService(config2, database)
	mapper := handlers.NewResponseMapper(config2)
	shrinkHandler := handlers.NewShrinkHandler(logger, shrinkService, statisticsService, mapper)
	restAPI, err := api.NewRestAPI(config2, logger, middlewareFactory, shrinkHandler)
	if err != nil {
		return nil, err
	}
	return restAPI, nil
}

func InitMigrator(config2 *config.Config, logger logging.Loggerer) (*storage.Migrator, error) {
	migrator := storage.NewMigrator(config2, logger)
	return migrator, nil
}
