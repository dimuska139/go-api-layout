// Code generated by MockGen. DO NOT EDIT.
// Source: shrink.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	models "github.com/dimuska139/urlshortener/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockShrinkServiceInterface is a mock of ShrinkServiceInterface interface.
type MockShrinkServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockShrinkServiceInterfaceMockRecorder
}

// MockShrinkServiceInterfaceMockRecorder is the mock recorder for MockShrinkServiceInterface.
type MockShrinkServiceInterfaceMockRecorder struct {
	mock *MockShrinkServiceInterface
}

// NewMockShrinkServiceInterface creates a new mock instance.
func NewMockShrinkServiceInterface(ctrl *gomock.Controller) *MockShrinkServiceInterface {
	mock := &MockShrinkServiceInterface{ctrl: ctrl}
	mock.recorder = &MockShrinkServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShrinkServiceInterface) EXPECT() *MockShrinkServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateShortCode mocks base method.
func (m *MockShrinkServiceInterface) CreateShortCode(ctx context.Context, longUrl string) (models.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShortCode", ctx, longUrl)
	ret0, _ := ret[0].(models.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateShortCode indicates an expected call of CreateShortCode.
func (mr *MockShrinkServiceInterfaceMockRecorder) CreateShortCode(ctx, longUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShortCode", reflect.TypeOf((*MockShrinkServiceInterface)(nil).CreateShortCode), ctx, longUrl)
}

// GetLongUrlByCode mocks base method.
func (m *MockShrinkServiceInterface) GetLongUrlByCode(ctx context.Context, shortCode string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLongUrlByCode", ctx, shortCode)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLongUrlByCode indicates an expected call of GetLongUrlByCode.
func (mr *MockShrinkServiceInterfaceMockRecorder) GetLongUrlByCode(ctx, shortCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLongUrlByCode", reflect.TypeOf((*MockShrinkServiceInterface)(nil).GetLongUrlByCode), ctx, shortCode)
}
