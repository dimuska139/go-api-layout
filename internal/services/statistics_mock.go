// Code generated by MockGen. DO NOT EDIT.
// Source: statistics.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStatisticsServiceInterface is a mock of StatisticsServiceInterface interface.
type MockStatisticsServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStatisticsServiceInterfaceMockRecorder
}

// MockStatisticsServiceInterfaceMockRecorder is the mock recorder for MockStatisticsServiceInterface.
type MockStatisticsServiceInterfaceMockRecorder struct {
	mock *MockStatisticsServiceInterface
}

// NewMockStatisticsServiceInterface creates a new mock instance.
func NewMockStatisticsServiceInterface(ctrl *gomock.Controller) *MockStatisticsServiceInterface {
	mock := &MockStatisticsServiceInterface{ctrl: ctrl}
	mock.recorder = &MockStatisticsServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatisticsServiceInterface) EXPECT() *MockStatisticsServiceInterfaceMockRecorder {
	return m.recorder
}

// SaveRedirectEvent mocks base method.
func (m *MockStatisticsServiceInterface) SaveRedirectEvent(ctx context.Context, code, userAgent string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveRedirectEvent", ctx, code, userAgent)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveRedirectEvent indicates an expected call of SaveRedirectEvent.
func (mr *MockStatisticsServiceInterfaceMockRecorder) SaveRedirectEvent(ctx, code, userAgent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRedirectEvent", reflect.TypeOf((*MockStatisticsServiceInterface)(nil).SaveRedirectEvent), ctx, code, userAgent)
}
